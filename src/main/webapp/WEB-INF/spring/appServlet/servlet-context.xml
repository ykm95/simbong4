<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- 인터셉터 설정 -->
	<interceptors>	
		<interceptor>
			<mapping path="/center/volunteer/list" />
			<beans:bean class="page.interceptor.CenterInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/center/volunteer/write" />
			<beans:bean class="page.interceptor.CenterInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/center/volunteer/update" />
			<beans:bean class="page.interceptor.CenterInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/center/volunteer/delete" />
			<beans:bean class="page.interceptor.CenterInterceptor" />
		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />


	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->

	<beans:bean
		class="org.springframework.social.google.connect.GoogleConnectionFactory"
		id="googleConnectionFactory">

		<beans:constructor-arg
			value="661200041177-uu3hcr6ei708qsiaskndvlqfob8n0f3c.apps.googleusercontent.com" />

		<beans:constructor-arg
			value="Sx85L6SqDJhLqIJJwgyOghQg" />

	</beans:bean>

	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean class="org.springframework.social.oauth2.OAuth2Parameters" id="googleOAuth2Parameters">
	
		<beans:property name="scope" value="email profile"></beans:property>
		
		<!-- https://www.googleapis.com/auth/plus.login -->
		<beans:property value="http://localhost:8088/googleLogin/googleSignInCallback" name="redirectUri"/>
	
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- 스프링 빈 기반의 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
		<!-- DownloadView클래스를 down이라는 이름의 스프링 빈으로 등록하기 -->
<!-- 	<beans:bean id="down" class="file.view.DownloadView" /> -->
	
	<!-- JSON응답용 jsonView 스프링 빈 등록하기 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxInMemorySize" value="1048576" />
		<beans:property name="maxUploadSize" value="10485760" />
		<beans:property name="maxUploadSizePerFile" value="5242880" />
	</beans:bean>	
	
	<context:component-scan base-package="com.simbong4.www, page.controller, page.service" />
	
	
	
</beans:beans>
